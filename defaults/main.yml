---
# defaults file for aspects_apache24

# Disable this role by default.
aspects_apache24_enabled: False
aspects_apache24_selinux_change: False
aspects_apache24_selinux_httpd_can_network_connect: True

aspects_apache24_packages:
  apache2:
    state: "present"
    Ubuntu:
      1604: "apache2"
      1404: "apache2"
    Debian:
      9: "apache2"
    CentOS:
      7: "httpd"

# Enable or disable other_vhosts log file.
# True by default.
aspects_apache24_other_vhosts_log_enable: True

# Enabling the default vhosts is not really a good idea.
# This currently only works on Ubuntu.
aspects_apache24_default_vhosts:
  default:
    Debian:
      enable: False
      file: "000-default.conf"
  defaultssl:
    Debian:
      enable: False
      file: "default-ssl.conf"
  defaulttls:
    Debian:
      enable: False
      file: "default-tls"
# Ubuntu is consistent where it places the LoadModule lines and .conf files.
# Thus, you just need to specifiy the names of the appropriate files.
# CentOS is less consistent. Most LoadModule lines are in httpd.conf.
# Some are not, thus the need to specify which file to look modify.
aspects_apache24_mods: {}
#  modssl:
#    Debian:
#      enable: True
#      links:
#        conffile: "ssl.conf"
#        loadfile: "ssl.load"
#    RedHat:
#      enable: True
#      targetfile: "/etc/httpd/conf.d/ssl.conf"
#      loadmoduleline: "LoadModule rewrite_module modules/mod_rewrite.so"
#  modrewrite:
#    Debian:
#      enable: True
#      links:
#        loadfile: "rewrite.load"
#    RedHat:
#      enable: True
#      targetfile: "/etc/httpd/conf/httpd.conf"
#      loadmoduleline: "LoadModule rewrite_module modules/mod_rewrite.so"
#  modauthndbm:
#    Debian:
#      enable: False
#      links:
#        loadfile: "authn_dbm.load"
#    RedHat:
#      enable: False
#      targetfile: "/etc/httpd/conf/httpd.conf"
#      loadmoduleline: "LoadModule authn_dbm_module modules/mod_authn_dbm.so"

# The configuration set is loaded into the main apache config via an include line.
# See the distributions default config file to find where that line is.
# On RedHat, check for what order the conf.d files are loaded if you run into issues.
aspects_apache24_httpdconf:
  0startconfig: |
    # Start Config
#  1defaultssl: |
#    # 1defaultssl config from aspects_apache24/defaults/main.yml
#    # CipherSuite set from https://community.qualys.com/blogs/securitylabs/2013/08/05/configuring-apache-nginx-and-openssl-for-forward-secrecy
#    <IfModule mod_ssl.c>
#      SSLProtocol All -SSLv2 -SSLv3
#      SSLHonorCipherOrder On
#      SSLCipherSuite EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH+aRSA+RC4:EECDH:EDH+aRSA:RC4:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS:+RC4:RC4
#    </IfModule>
  ZZZZZblock: |
    # End config

# example vhosts shown below, commented out.
# You should set vhost config in your group_vars or host_vars.
aspects_apache24_vhosts:
  0vhosts: |
    # Start virtual hosts
#  0default: |
#    <VirtualHost *:80>
#        ServerAdmin webmaster@localhost
#
#        DocumentRoot /var/www
#        <Directory />
#            Options FollowSymLinks
#            AllowOverride None
#        </Directory>
#        <Directory /var/www/>
#            Options Indexes FollowSymLinks MultiViews
#            AllowOverride None
#            Order allow,deny
#            allow from all
#        </Directory>
#
#        ScriptAlias /cgi-bin/ /usr/lib/cgi-bin/
#        <Directory "/usr/lib/cgi-bin">
#            AllowOverride None
#            Options +ExecCGI -MultiViews +SymLinksIfOwnerMatch
#            Order allow,deny
#            Allow from all
#        </Directory>
#
#        ErrorLog ${APACHE_LOG_DIR}/error.log
#
#        # Possible values include: debug, info, notice, warn, error, crit,
#        # alert, emerg.
#        LogLevel warn
#
#        CustomLog ${APACHE_LOG_DIR}/access.log combined
#
#        Alias /doc/ "/usr/share/doc/"
#        <Directory "/usr/share/doc/">
#            Options Indexes MultiViews FollowSymLinks
#            AllowOverride None
#            Order deny,allow
#            Deny from all
#            Allow from 127.0.0.0/255.0.0.0 ::1/128
#        </Directory>
#
#    </VirtualHost>
#  1defaultssl: |
#    <IfModule mod_ssl.c>
#    <VirtualHost _default_:443>
#    	ServerAdmin webmaster@localhost
#
#    	DocumentRoot /var/www
#    	<Directory />
#    		Options FollowSymLinks
#    		AllowOverride None
#    	</Directory>
#    	<Directory /var/www/>
#    		Options Indexes FollowSymLinks MultiViews
#    		AllowOverride None
#    		Order allow,deny
#    		allow from all
#    	</Directory>
#
#    	ErrorLog ${APACHE_LOG_DIR}/error.log
#
#    	# Possible values include: debug, info, notice, warn, error, crit,
#    	# alert, emerg.
#    	LogLevel warn
#
#    	CustomLog ${APACHE_LOG_DIR}/ssl_access.log combined
#
#    	#   SSL Engine Switch:
#    	#   Enable/Disable SSL for this virtual host.
#    	SSLEngine on
#
#    	#   A self-signed (snakeoil) certificate can be created by installing
#    	#   the ssl-cert package. See
#    	#   /usr/share/doc/apache2.2-common/README.Debian.gz for more info.
#    	#   If both key and certificate are stored in the same file, only the
#    	#   SSLCertificateFile directive is needed.
#    	SSLCertificateFile    /etc/ssl/certs/ssl-cert-snakeoil.pem
#    	SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key
#
#    	#   Server Certificate Chain:
#    	#   Point SSLCertificateChainFile at a file containing the
#    	#   concatenation of PEM encoded CA certificates which form the
#    	#   certificate chain for the server certificate. Alternatively
#    	#   the referenced file can be the same as SSLCertificateFile
#    	#   when the CA certificates are directly appended to the server
#    	#   certificate for convinience.
#    	#SSLCertificateChainFile /etc/apache2/ssl.crt/server-ca.crt
#
#    	#   Certificate Authority (CA):
#    	#   Set the CA certificate verification path where to find CA
#    	#   certificates for client authentication or alternatively one
#    	#   huge file containing all of them (file must be PEM encoded)
#    	#   Note: Inside SSLCACertificatePath you need hash symlinks
#    	#         to point to the certificate files. Use the provided
#    	#         Makefile to update the hash symlinks after changes.
#    	#SSLCACertificatePath /etc/ssl/certs/
#    	#SSLCACertificateFile /etc/apache2/ssl.crt/ca-bundle.crt
#
#    </VirtualHost>
#    </IfModule>
  ZZZZZZZvhost: |
    # End Virtual Hosts
